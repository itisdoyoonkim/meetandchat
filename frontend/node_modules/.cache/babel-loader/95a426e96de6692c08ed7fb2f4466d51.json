{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/toto/Desktop/all/dev/js/open-chat-pulling/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Col, Row, Space, Card } from \"antd\";\nimport { HeartFilled, TeamOutlined, TagsOutlined, CommentOutlined } from \"@ant-design/icons\";\n\nfunction App() {\n  _s();\n\n  const [openChatList, setOpenChatList] = useState([]);\n  useEffect(() => {\n    async function fetchOpenChatList() {\n      const res = await axios.get(\"http://localhost:5000/getLinks\", {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\"\n        }\n      }); // console.log(res.data.result.lists);\n\n      setOpenChatList(res.data.result.lists);\n    }\n\n    fetchOpenChatList();\n    return () => {};\n  }, []);\n\n  function renderOpenChatList() {\n    console.log(openChatList);\n    return openChatList.map(chat => {\n      return /*#__PURE__*/_jsxDEV(Card.Grid, {\n        style: gridStyle,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: chat.name,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              \"aria-label\": \"Link to enter chat room\",\n              href: chat.openlink,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(CommentOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), \" \\uC785\\uC7A5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(TeamOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), chat.headcount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(HeartFilled, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), chat.like]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TagsOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), chat.tags.map(tag => {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [tag, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 24\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderOpenChatList()\n  }, void 0, false);\n}\n\n_s(App, \"QdOwFHBQGAkF6d/WK25weu3dyvw=\");\n\n_c = App;\nconst gridStyle = {\n  width: \"25%\",\n  textAlign: \"center\"\n};\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/toto/Desktop/all/dev/js/open-chat-pulling/src/App.js"],"names":["useEffect","useState","axios","Col","Row","Space","Card","HeartFilled","TeamOutlined","TagsOutlined","CommentOutlined","App","openChatList","setOpenChatList","fetchOpenChatList","res","get","headers","data","result","lists","renderOpenChatList","console","log","map","chat","gridStyle","name","openlink","headcount","like","tags","tag","width","textAlign"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,IAA1B,QAAsC,MAAtC;AACA,SACEC,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,eAJF,QAKO,mBALP;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,iBAAf,GAAmC;AACjC,YAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,gCAAV,EAA4C;AAC5DC,QAAAA,OAAO,EAAE;AAAE,yCAA+B;AAAjC;AADmD,OAA5C,CAAlB,CADiC,CAKjC;;AAEAJ,MAAAA,eAAe,CAACE,GAAG,CAACG,IAAJ,CAASC,MAAT,CAAgBC,KAAjB,CAAf;AACD;;AAEDN,IAAAA,iBAAiB;AAEjB,WAAO,MAAM,CAAE,CAAf;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,WAASO,kBAAT,GAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYX,YAAZ;AAEA,WAAOA,YAAY,CAACY,GAAb,CAAkBC,IAAD,IAAU;AAChC,0BACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAEC,SAAlB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,KAAK,EAAED,IAAI,CAACE,IAAlB;AAAA,kCACE;AAAA,mCACE;AACE,4BAAW,yBADb;AAEE,cAAA,IAAI,EAAEF,IAAI,CAACG,QAFb;AAGE,cAAA,MAAM,EAAC,QAHT;AAIE,cAAA,GAAG,EAAC,YAJN;AAAA,sCAME,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAA,oCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGH,IAAI,CAACI,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAeE;AAAA,oCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGJ,IAAI,CAACK,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAmBE;AAAA;AAAA;AAAA;AAAA,kBAnBF,eAoBE;AAAA,oCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGL,IAAI,CAACM,IAAL,CAAUP,GAAV,CAAeQ,GAAD,IAAS;AACtB,kCAAO;AAAA,2BAAOA,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AA+BD,KAhCM,CAAP;AAiCD;;AAED,sBAAO;AAAA,cAAGX,kBAAkB;AAArB,mBAAP;AACD;;GA1DQV,G;;KAAAA,G;AA4DT,MAAMe,SAAS,GAAG;AAChBO,EAAAA,KAAK,EAAE,KADS;AAEhBC,EAAAA,SAAS,EAAE;AAFK,CAAlB;AAKA,eAAevB,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Col, Row, Space, Card } from \"antd\";\nimport {\n  HeartFilled,\n  TeamOutlined,\n  TagsOutlined,\n  CommentOutlined,\n} from \"@ant-design/icons\";\n\nfunction App() {\n  const [openChatList, setOpenChatList] = useState([]);\n\n  useEffect(() => {\n    async function fetchOpenChatList() {\n      const res = await axios.get(\"http://localhost:5000/getLinks\", {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      });\n\n      // console.log(res.data.result.lists);\n\n      setOpenChatList(res.data.result.lists);\n    }\n\n    fetchOpenChatList();\n\n    return () => {};\n  }, []);\n\n  function renderOpenChatList() {\n    console.log(openChatList);\n\n    return openChatList.map((chat) => {\n      return (\n        <Card.Grid style={gridStyle}>\n          <Card title={chat.name}>\n            <p>\n              <a\n                aria-label=\"Link to enter chat room\"\n                href={chat.openlink}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                <CommentOutlined /> 입장\n              </a>\n            </p>\n            <p>\n              <TeamOutlined />\n              {chat.headcount}\n            </p>\n            <p>\n              <HeartFilled />\n              {chat.like}\n            </p>\n            <hr />\n            <div>\n              <TagsOutlined />\n              {chat.tags.map((tag) => {\n                return <span>{tag} </span>;\n              })}\n            </div>\n          </Card>\n        </Card.Grid>\n      );\n    });\n  }\n\n  return <>{renderOpenChatList()}</>;\n}\n\nconst gridStyle = {\n  width: \"25%\",\n  textAlign: \"center\",\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}